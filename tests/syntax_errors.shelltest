lex1.burn:
	?

string1.burn:
	"
x1.burn:
	"\x"
x2.burn:
	"\x?"
// TODO more \x, also \u, \U, ...

var1.burn:
	let $
var2.burn:
	let $0
var3.burn:
	let $:
var4.burn:
	let $:foo
var5.burn:
	let $foo:
var6.burn:
	let $foo::bar

include1.burn:
	include

break1.burn:
	break
break2.burn:
	break #loop
break3.burn:
	while true {
		break #loop
	}

while1.burn:
	while
while2.burn:
	while {
	}
while3.burn:
	#loop
	while true {
		#loop
		while true {
		}
	}

catch1.burn:
	try {
	} catch {
	}
catch2.burn:
	try {
	} catch TypeError {
	}

// all scripts must fail to pass
$ for f in `ls`; do if $BURN $f 2> /dev/null; then >&2 echo "$f passed"; exit 1; fi done
