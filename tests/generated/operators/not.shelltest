// generated by `etc/generate_operator_test.py not`

not_result.burn:
	import test
	import burn.types
	
	let $v0 = not nothing
	assert( $v0 is Boolean )
	assert( $v0 == true )
	
	let $v1 = not true
	assert( $v1 is Boolean )
	assert( $v1 == false )
	
	let $v2 = not false
	assert( $v2 is Boolean )
	assert( $v2 == true )
	
	let $v3 = not 0
	assert( $v3 is Boolean )
	assert( $v3 == true )
	
	let $v4 = not 2
	assert( $v4 is Boolean )
	assert( $v4 == false )
	
	let $v5 = not -2
	assert( $v5 is Boolean )
	assert( $v5 == false )
	
	let $v6 = not 0.0
	assert( $v6 is Boolean )
	assert( $v6 == true )
	
	let $v7 = not 2.0
	assert( $v7 is Boolean )
	assert( $v7 == false )
	
	let $v8 = not -0.5
	assert( $v8 is Boolean )
	assert( $v8 == false )
	
	let $v9 = not "c"[0]
	assert( $v9 is Boolean )
	assert( $v9 == false )
	
	let $v10 = not ""
	assert( $v10 is Boolean )
	assert( $v10 == true )
	
	let $v11 = not "apple"
	assert( $v11 is Boolean )
	assert( $v11 == false )
	
	let $v12 = not "banana"
	assert( $v12 is Boolean )
	assert( $v12 == false )
	
	let $v13 = not b""
	assert( $v13 is Boolean )
	assert( $v13 == true )
	
	let $v14 = not b"	Â«"
	assert( $v14 is Boolean )
	assert( $v14 == false )
	
	let $v15 = not repr
	assert( $v15 is Boolean )
	assert( $v15 == false )
	
	let $v16 = not function(){}
	assert( $v16 is Boolean )
	assert( $v16 == false )
	
	let $v17 = not Integer
	assert( $v17 is Boolean )
	assert( $v17 == false )
	
	let $v18 = not Type
	assert( $v18 is Boolean )
	assert( $v18 == false )
	
	let $v19 = not types
	assert( $v19 is Boolean )
	assert( $v19 == false )

$ $BURN not_result.burn
