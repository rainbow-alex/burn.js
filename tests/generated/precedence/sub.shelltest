// generated by `etc/generate_precedence_test.py sub`

sub_or.burn:
	assert( ( ( 0 - 0 ) or 2 ) == 2 )
	assert( ( 0 - ( 0 or 2 ) ) == -2 )
	assert( ( 0 - 0 or 2 ) == 2 )
	
$ $BURN sub_or.burn

sub_and.burn:
	assert( ( ( 0 - 2 ) and 2 ) == 2 )
	assert( ( 0 - ( 2 and 2 ) ) == -2 )
	assert( ( 0 - 2 and 2 ) == 2 )
	
$ $BURN sub_and.burn

// GREP_ME precedence sub not

// GREP_ME precedence sub is

// GREP_ME precedence sub is_not

sub_eq.burn:
	import test
	assert( ( ( 0 - 0 ) == 0 ) == true )
	test.assert_throws( function() { 0 - ( 0 == 0 ) }, TypeError )
	assert( ( 0 - 0 == 0 ) == true )
	
$ $BURN sub_eq.burn

sub_neq.burn:
	import test
	assert( ( ( 0 - 0 ) != 0 ) == false )
	test.assert_throws( function() { 0 - ( 0 != 0 ) }, TypeError )
	assert( ( 0 - 0 != 0 ) == false )
	
$ $BURN sub_neq.burn

sub_lt.burn:
	import test
	assert( ( ( 0 - 0 ) < 0 ) == false )
	test.assert_throws( function() { 0 - ( 0 < 0 ) }, TypeError )
	assert( ( 0 - 0 < 0 ) == false )
	
$ $BURN sub_lt.burn

sub_gt.burn:
	import test
	assert( ( ( 0 - 0 ) > 0 ) == false )
	test.assert_throws( function() { 0 - ( 0 > 0 ) }, TypeError )
	assert( ( 0 - 0 > 0 ) == false )
	
$ $BURN sub_gt.burn

sub_lteq.burn:
	import test
	assert( ( ( 0 - 0 ) <= 0 ) == true )
	test.assert_throws( function() { 0 - ( 0 <= 0 ) }, TypeError )
	assert( ( 0 - 0 <= 0 ) == true )
	
$ $BURN sub_lteq.burn

sub_gteq.burn:
	import test
	assert( ( ( 0 - 0 ) >= 0 ) == true )
	test.assert_throws( function() { 0 - ( 0 >= 0 ) }, TypeError )
	assert( ( 0 - 0 >= 0 ) == true )
	
$ $BURN sub_gteq.burn

sub_add.burn:
	assert( ( ( 0 - 0 ) + 2 ) == 2 )
	assert( ( 0 - ( 0 + 2 ) ) == -2 )
	assert( ( 0 - 0 + 2 ) == 2 )
	
$ $BURN sub_add.burn

sub_sub.burn:
	assert( ( ( 0 - 0 ) - 2 ) == -2 )
	assert( ( 0 - ( 0 - 2 ) ) == 2 )
	assert( ( 0 - 0 - 2 ) == -2 )
	
$ $BURN sub_sub.burn

sub_mul.burn:
	assert( ( ( 2 - 0 ) * 0 ) == 0 )
	assert( ( 2 - ( 0 * 0 ) ) == 2 )
	assert( ( 2 - 0 * 0 ) == 2 )
	
$ $BURN sub_mul.burn

// GREP_ME precedence sub div

// GREP_ME precedence sub union

// GREP_ME precedence sub intersection
