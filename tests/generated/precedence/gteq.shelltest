// generated by `etc/generate_precedence_test.py gteq`

gteq_or.burn:
	assert( ( ( 0 >= 0 ) or 2 ) == true )
	assert( ( 0 >= ( 0 or 2 ) ) == false )
	assert( ( 0 >= 0 or 2 ) == true )
	
$ $BURN gteq_or.burn

gteq_and.burn:
	assert( ( ( 0 >= 0 ) and nothing ) == nothing )
	assert( ( 0 >= ( 0 and nothing ) ) == true )
	assert( ( 0 >= 0 and nothing ) == nothing )
	
$ $BURN gteq_and.burn

// GREP_ME precedence gteq not

gteq_is.burn:
	nothing >= nothing is nothing
$ $BURN gteq_is.burn
	* exit status nonzero

gteq_is_not.burn:
	nothing >= nothing is not nothing
$ $BURN gteq_is_not.burn
	* exit status nonzero

gteq_eq.burn:
	nothing >= nothing == nothing
$ $BURN gteq_eq.burn
	* exit status nonzero

gteq_neq.burn:
	nothing >= nothing != nothing
$ $BURN gteq_neq.burn
	* exit status nonzero

gteq_lt.burn:
	nothing >= nothing < nothing
$ $BURN gteq_lt.burn
	* exit status nonzero

gteq_gt.burn:
	nothing >= nothing > nothing
$ $BURN gteq_gt.burn
	* exit status nonzero

gteq_lteq.burn:
	nothing >= nothing <= nothing
$ $BURN gteq_lteq.burn
	* exit status nonzero

gteq_gteq.burn:
	nothing >= nothing >= nothing
$ $BURN gteq_gteq.burn
	* exit status nonzero

gteq_add.burn:
	import test
	test.assert_throws( function() { ( 0 >= 0 ) + 0 }, TypeError )
	assert( ( 0 >= ( 0 + 0 ) ) == true )
	assert( ( 0 >= 0 + 0 ) == true )
	
$ $BURN gteq_add.burn

gteq_sub.burn:
	import test
	test.assert_throws( function() { ( 0 >= 0 ) - 0 }, TypeError )
	assert( ( 0 >= ( 0 - 0 ) ) == true )
	assert( ( 0 >= 0 - 0 ) == true )
	
$ $BURN gteq_sub.burn

gteq_mul.burn:
	import test
	test.assert_throws( function() { ( 0 >= 0 ) * 0 }, TypeError )
	assert( ( 0 >= ( 0 * 0 ) ) == true )
	assert( ( 0 >= 0 * 0 ) == true )
	
$ $BURN gteq_mul.burn

gteq_div.burn:
	import test
	test.assert_throws( function() { ( 0 >= 0 ) / 2 }, TypeError )
	assert( ( 0 >= ( 0 / 2 ) ) == true )
	assert( ( 0 >= 0 / 2 ) == true )
	
$ $BURN gteq_div.burn

// GREP_ME precedence gteq union

// GREP_ME precedence gteq intersection
