// generated by `etc/generate_precedence_test.py add`

add_or.burn:
	assert( ( ( 2 + 0 ) or 2 ) == 2 )
	assert( ( 2 + ( 0 or 2 ) ) == 4 )
	assert( ( 2 + 0 or 2 ) == 2 )
	
$ $BURN add_or.burn

add_and.burn:
	assert( ( ( 2 + 0 ) and nothing ) == nothing )
	assert( ( 2 + ( 0 and nothing ) ) == 2 )
	assert( ( 2 + 0 and nothing ) == nothing )
	
$ $BURN add_and.burn

// GREP_ME precedence add not

// GREP_ME precedence add is

// GREP_ME precedence add is_not

add_eq.burn:
	import test
	assert( ( ( 0 + 0 ) == 0 ) == true )
	test.assert_throws( function() { 0 + ( 0 == 0 ) }, TypeError )
	assert( ( 0 + 0 == 0 ) == true )
	
$ $BURN add_eq.burn

add_neq.burn:
	import test
	assert( ( ( 0 + 0 ) != 0 ) == false )
	test.assert_throws( function() { 0 + ( 0 != 0 ) }, TypeError )
	assert( ( 0 + 0 != 0 ) == false )
	
$ $BURN add_neq.burn

add_lt.burn:
	import test
	assert( ( ( 0 + 0 ) < 0 ) == false )
	test.assert_throws( function() { 0 + ( 0 < 0 ) }, TypeError )
	assert( ( 0 + 0 < 0 ) == false )
	
$ $BURN add_lt.burn

add_gt.burn:
	import test
	assert( ( ( 0 + 0 ) > 0 ) == false )
	test.assert_throws( function() { 0 + ( 0 > 0 ) }, TypeError )
	assert( ( 0 + 0 > 0 ) == false )
	
$ $BURN add_gt.burn

add_lteq.burn:
	import test
	assert( ( ( 0 + 0 ) <= 0 ) == true )
	test.assert_throws( function() { 0 + ( 0 <= 0 ) }, TypeError )
	assert( ( 0 + 0 <= 0 ) == true )
	
$ $BURN add_lteq.burn

add_gteq.burn:
	import test
	assert( ( ( 0 + 0 ) >= 0 ) == true )
	test.assert_throws( function() { 0 + ( 0 >= 0 ) }, TypeError )
	assert( ( 0 + 0 >= 0 ) == true )
	
$ $BURN add_gteq.burn

// GREP_ME precedence add add

// GREP_ME precedence add sub

add_mul.burn:
	assert( ( ( 2 + 0 ) * 0 ) == 0 )
	assert( ( 2 + ( 0 * 0 ) ) == 2 )
	assert( ( 2 + 0 * 0 ) == 2 )
	
$ $BURN add_mul.burn

// GREP_ME precedence add div

// GREP_ME precedence add union

// GREP_ME precedence add intersection
