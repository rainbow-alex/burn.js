// generated by `etc/generate_operator_test.py union`

union_result_1.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { nothing | nothing }, TypeError )
	
	assert.throws( function() { nothing | true }, TypeError )
	
	assert.throws( function() { nothing | false }, TypeError )
	
	assert.throws( function() { nothing | 0 }, TypeError )
	
	assert.throws( function() { nothing | 2 }, TypeError )
	
	assert.throws( function() { nothing | -2 }, TypeError )
	
	assert.throws( function() { nothing | 0.0 }, TypeError )
	
	assert.throws( function() { nothing | 2.0 }, TypeError )
	
	assert.throws( function() { nothing | -0.5 }, TypeError )
	
	assert.throws( function() { nothing | "" }, TypeError )
	
	assert.throws( function() { nothing | "apple" }, TypeError )
	
	assert.throws( function() { nothing | "banana" }, TypeError )
	
	assert.throws( function() { nothing | repr }, TypeError )
	
	assert.throws( function() { nothing | function(){} }, TypeError )
	
	assert.throws( function() { nothing | Something }, TypeError )
	
	assert.throws( function() { nothing | Type }, TypeError )
	
	assert.throws( function() { nothing | types }, TypeError )
	
	assert.throws( function() { nothing | errors }, TypeError )

$ $BURN --tolerant union_result_1.burn

union_result_2.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { true | nothing }, TypeError )
	
	assert.throws( function() { true | true }, TypeError )
	
	assert.throws( function() { true | false }, TypeError )
	
	assert.throws( function() { true | 0 }, TypeError )
	
	assert.throws( function() { true | 2 }, TypeError )
	
	assert.throws( function() { true | -2 }, TypeError )
	
	assert.throws( function() { true | 0.0 }, TypeError )
	
	assert.throws( function() { true | 2.0 }, TypeError )
	
	assert.throws( function() { true | -0.5 }, TypeError )
	
	assert.throws( function() { true | "" }, TypeError )
	
	assert.throws( function() { true | "apple" }, TypeError )
	
	assert.throws( function() { true | "banana" }, TypeError )
	
	assert.throws( function() { true | repr }, TypeError )
	
	assert.throws( function() { true | function(){} }, TypeError )
	
	assert.throws( function() { true | Something }, TypeError )
	
	assert.throws( function() { true | Type }, TypeError )
	
	assert.throws( function() { true | types }, TypeError )
	
	assert.throws( function() { true | errors }, TypeError )

$ $BURN --tolerant union_result_2.burn

union_result_3.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { false | nothing }, TypeError )
	
	assert.throws( function() { false | true }, TypeError )
	
	assert.throws( function() { false | false }, TypeError )
	
	assert.throws( function() { false | 0 }, TypeError )
	
	assert.throws( function() { false | 2 }, TypeError )
	
	assert.throws( function() { false | -2 }, TypeError )
	
	assert.throws( function() { false | 0.0 }, TypeError )
	
	assert.throws( function() { false | 2.0 }, TypeError )
	
	assert.throws( function() { false | -0.5 }, TypeError )
	
	assert.throws( function() { false | "" }, TypeError )
	
	assert.throws( function() { false | "apple" }, TypeError )
	
	assert.throws( function() { false | "banana" }, TypeError )
	
	assert.throws( function() { false | repr }, TypeError )
	
	assert.throws( function() { false | function(){} }, TypeError )
	
	assert.throws( function() { false | Something }, TypeError )
	
	assert.throws( function() { false | Type }, TypeError )
	
	assert.throws( function() { false | types }, TypeError )
	
	assert.throws( function() { false | errors }, TypeError )

$ $BURN --tolerant union_result_3.burn

union_result_4.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { 0 | nothing }, TypeError )
	
	assert.throws( function() { 0 | true }, TypeError )
	
	assert.throws( function() { 0 | false }, TypeError )
	
	assert.throws( function() { 0 | 0 }, TypeError )
	
	assert.throws( function() { 0 | 2 }, TypeError )
	
	assert.throws( function() { 0 | -2 }, TypeError )
	
	assert.throws( function() { 0 | 0.0 }, TypeError )
	
	assert.throws( function() { 0 | 2.0 }, TypeError )
	
	assert.throws( function() { 0 | -0.5 }, TypeError )
	
	assert.throws( function() { 0 | "" }, TypeError )
	
	assert.throws( function() { 0 | "apple" }, TypeError )
	
	assert.throws( function() { 0 | "banana" }, TypeError )
	
	assert.throws( function() { 0 | repr }, TypeError )
	
	assert.throws( function() { 0 | function(){} }, TypeError )
	
	assert.throws( function() { 0 | Something }, TypeError )
	
	assert.throws( function() { 0 | Type }, TypeError )
	
	assert.throws( function() { 0 | types }, TypeError )
	
	assert.throws( function() { 0 | errors }, TypeError )

$ $BURN --tolerant union_result_4.burn

union_result_5.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { 2 | nothing }, TypeError )
	
	assert.throws( function() { 2 | true }, TypeError )
	
	assert.throws( function() { 2 | false }, TypeError )
	
	assert.throws( function() { 2 | 0 }, TypeError )
	
	assert.throws( function() { 2 | 2 }, TypeError )
	
	assert.throws( function() { 2 | -2 }, TypeError )
	
	assert.throws( function() { 2 | 0.0 }, TypeError )
	
	assert.throws( function() { 2 | 2.0 }, TypeError )
	
	assert.throws( function() { 2 | -0.5 }, TypeError )
	
	assert.throws( function() { 2 | "" }, TypeError )
	
	assert.throws( function() { 2 | "apple" }, TypeError )
	
	assert.throws( function() { 2 | "banana" }, TypeError )
	
	assert.throws( function() { 2 | repr }, TypeError )
	
	assert.throws( function() { 2 | function(){} }, TypeError )
	
	assert.throws( function() { 2 | Something }, TypeError )
	
	assert.throws( function() { 2 | Type }, TypeError )
	
	assert.throws( function() { 2 | types }, TypeError )
	
	assert.throws( function() { 2 | errors }, TypeError )

$ $BURN --tolerant union_result_5.burn

union_result_6.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { -2 | nothing }, TypeError )
	
	assert.throws( function() { -2 | true }, TypeError )
	
	assert.throws( function() { -2 | false }, TypeError )
	
	assert.throws( function() { -2 | 0 }, TypeError )
	
	assert.throws( function() { -2 | 2 }, TypeError )
	
	assert.throws( function() { -2 | -2 }, TypeError )
	
	assert.throws( function() { -2 | 0.0 }, TypeError )
	
	assert.throws( function() { -2 | 2.0 }, TypeError )
	
	assert.throws( function() { -2 | -0.5 }, TypeError )
	
	assert.throws( function() { -2 | "" }, TypeError )
	
	assert.throws( function() { -2 | "apple" }, TypeError )
	
	assert.throws( function() { -2 | "banana" }, TypeError )
	
	assert.throws( function() { -2 | repr }, TypeError )
	
	assert.throws( function() { -2 | function(){} }, TypeError )
	
	assert.throws( function() { -2 | Something }, TypeError )
	
	assert.throws( function() { -2 | Type }, TypeError )
	
	assert.throws( function() { -2 | types }, TypeError )
	
	assert.throws( function() { -2 | errors }, TypeError )

$ $BURN --tolerant union_result_6.burn

union_result_7.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { 0.0 | nothing }, TypeError )
	
	assert.throws( function() { 0.0 | true }, TypeError )
	
	assert.throws( function() { 0.0 | false }, TypeError )
	
	assert.throws( function() { 0.0 | 0 }, TypeError )
	
	assert.throws( function() { 0.0 | 2 }, TypeError )
	
	assert.throws( function() { 0.0 | -2 }, TypeError )
	
	assert.throws( function() { 0.0 | 0.0 }, TypeError )
	
	assert.throws( function() { 0.0 | 2.0 }, TypeError )
	
	assert.throws( function() { 0.0 | -0.5 }, TypeError )
	
	assert.throws( function() { 0.0 | "" }, TypeError )
	
	assert.throws( function() { 0.0 | "apple" }, TypeError )
	
	assert.throws( function() { 0.0 | "banana" }, TypeError )
	
	assert.throws( function() { 0.0 | repr }, TypeError )
	
	assert.throws( function() { 0.0 | function(){} }, TypeError )
	
	assert.throws( function() { 0.0 | Something }, TypeError )
	
	assert.throws( function() { 0.0 | Type }, TypeError )
	
	assert.throws( function() { 0.0 | types }, TypeError )
	
	assert.throws( function() { 0.0 | errors }, TypeError )

$ $BURN --tolerant union_result_7.burn

union_result_8.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { 2.0 | nothing }, TypeError )
	
	assert.throws( function() { 2.0 | true }, TypeError )
	
	assert.throws( function() { 2.0 | false }, TypeError )
	
	assert.throws( function() { 2.0 | 0 }, TypeError )
	
	assert.throws( function() { 2.0 | 2 }, TypeError )
	
	assert.throws( function() { 2.0 | -2 }, TypeError )
	
	assert.throws( function() { 2.0 | 0.0 }, TypeError )
	
	assert.throws( function() { 2.0 | 2.0 }, TypeError )
	
	assert.throws( function() { 2.0 | -0.5 }, TypeError )
	
	assert.throws( function() { 2.0 | "" }, TypeError )
	
	assert.throws( function() { 2.0 | "apple" }, TypeError )
	
	assert.throws( function() { 2.0 | "banana" }, TypeError )
	
	assert.throws( function() { 2.0 | repr }, TypeError )
	
	assert.throws( function() { 2.0 | function(){} }, TypeError )
	
	assert.throws( function() { 2.0 | Something }, TypeError )
	
	assert.throws( function() { 2.0 | Type }, TypeError )
	
	assert.throws( function() { 2.0 | types }, TypeError )
	
	assert.throws( function() { 2.0 | errors }, TypeError )

$ $BURN --tolerant union_result_8.burn

union_result_9.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { -0.5 | nothing }, TypeError )
	
	assert.throws( function() { -0.5 | true }, TypeError )
	
	assert.throws( function() { -0.5 | false }, TypeError )
	
	assert.throws( function() { -0.5 | 0 }, TypeError )
	
	assert.throws( function() { -0.5 | 2 }, TypeError )
	
	assert.throws( function() { -0.5 | -2 }, TypeError )
	
	assert.throws( function() { -0.5 | 0.0 }, TypeError )
	
	assert.throws( function() { -0.5 | 2.0 }, TypeError )
	
	assert.throws( function() { -0.5 | -0.5 }, TypeError )
	
	assert.throws( function() { -0.5 | "" }, TypeError )
	
	assert.throws( function() { -0.5 | "apple" }, TypeError )
	
	assert.throws( function() { -0.5 | "banana" }, TypeError )
	
	assert.throws( function() { -0.5 | repr }, TypeError )
	
	assert.throws( function() { -0.5 | function(){} }, TypeError )
	
	assert.throws( function() { -0.5 | Something }, TypeError )
	
	assert.throws( function() { -0.5 | Type }, TypeError )
	
	assert.throws( function() { -0.5 | types }, TypeError )
	
	assert.throws( function() { -0.5 | errors }, TypeError )

$ $BURN --tolerant union_result_9.burn

union_result_10.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { "" | nothing }, TypeError )
	
	assert.throws( function() { "" | true }, TypeError )
	
	assert.throws( function() { "" | false }, TypeError )
	
	assert.throws( function() { "" | 0 }, TypeError )
	
	assert.throws( function() { "" | 2 }, TypeError )
	
	assert.throws( function() { "" | -2 }, TypeError )
	
	assert.throws( function() { "" | 0.0 }, TypeError )
	
	assert.throws( function() { "" | 2.0 }, TypeError )
	
	assert.throws( function() { "" | -0.5 }, TypeError )
	
	assert.throws( function() { "" | "" }, TypeError )
	
	assert.throws( function() { "" | "apple" }, TypeError )
	
	assert.throws( function() { "" | "banana" }, TypeError )
	
	assert.throws( function() { "" | repr }, TypeError )
	
	assert.throws( function() { "" | function(){} }, TypeError )
	
	assert.throws( function() { "" | Something }, TypeError )
	
	assert.throws( function() { "" | Type }, TypeError )
	
	assert.throws( function() { "" | types }, TypeError )
	
	assert.throws( function() { "" | errors }, TypeError )

$ $BURN --tolerant union_result_10.burn

union_result_11.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { "apple" | nothing }, TypeError )
	
	assert.throws( function() { "apple" | true }, TypeError )
	
	assert.throws( function() { "apple" | false }, TypeError )
	
	assert.throws( function() { "apple" | 0 }, TypeError )
	
	assert.throws( function() { "apple" | 2 }, TypeError )
	
	assert.throws( function() { "apple" | -2 }, TypeError )
	
	assert.throws( function() { "apple" | 0.0 }, TypeError )
	
	assert.throws( function() { "apple" | 2.0 }, TypeError )
	
	assert.throws( function() { "apple" | -0.5 }, TypeError )
	
	assert.throws( function() { "apple" | "" }, TypeError )
	
	assert.throws( function() { "apple" | "apple" }, TypeError )
	
	assert.throws( function() { "apple" | "banana" }, TypeError )
	
	assert.throws( function() { "apple" | repr }, TypeError )
	
	assert.throws( function() { "apple" | function(){} }, TypeError )
	
	assert.throws( function() { "apple" | Something }, TypeError )
	
	assert.throws( function() { "apple" | Type }, TypeError )
	
	assert.throws( function() { "apple" | types }, TypeError )
	
	assert.throws( function() { "apple" | errors }, TypeError )

$ $BURN --tolerant union_result_11.burn

union_result_12.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { "banana" | nothing }, TypeError )
	
	assert.throws( function() { "banana" | true }, TypeError )
	
	assert.throws( function() { "banana" | false }, TypeError )
	
	assert.throws( function() { "banana" | 0 }, TypeError )
	
	assert.throws( function() { "banana" | 2 }, TypeError )
	
	assert.throws( function() { "banana" | -2 }, TypeError )
	
	assert.throws( function() { "banana" | 0.0 }, TypeError )
	
	assert.throws( function() { "banana" | 2.0 }, TypeError )
	
	assert.throws( function() { "banana" | -0.5 }, TypeError )
	
	assert.throws( function() { "banana" | "" }, TypeError )
	
	assert.throws( function() { "banana" | "apple" }, TypeError )
	
	assert.throws( function() { "banana" | "banana" }, TypeError )
	
	assert.throws( function() { "banana" | repr }, TypeError )
	
	assert.throws( function() { "banana" | function(){} }, TypeError )
	
	assert.throws( function() { "banana" | Something }, TypeError )
	
	assert.throws( function() { "banana" | Type }, TypeError )
	
	assert.throws( function() { "banana" | types }, TypeError )
	
	assert.throws( function() { "banana" | errors }, TypeError )

$ $BURN --tolerant union_result_12.burn

union_result_13.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { repr | nothing }, TypeError )
	
	assert.throws( function() { repr | true }, TypeError )
	
	assert.throws( function() { repr | false }, TypeError )
	
	assert.throws( function() { repr | 0 }, TypeError )
	
	assert.throws( function() { repr | 2 }, TypeError )
	
	assert.throws( function() { repr | -2 }, TypeError )
	
	assert.throws( function() { repr | 0.0 }, TypeError )
	
	assert.throws( function() { repr | 2.0 }, TypeError )
	
	assert.throws( function() { repr | -0.5 }, TypeError )
	
	assert.throws( function() { repr | "" }, TypeError )
	
	assert.throws( function() { repr | "apple" }, TypeError )
	
	assert.throws( function() { repr | "banana" }, TypeError )
	
	assert.throws( function() { repr | repr }, TypeError )
	
	assert.throws( function() { repr | function(){} }, TypeError )
	
	assert.throws( function() { repr | Something }, TypeError )
	
	assert.throws( function() { repr | Type }, TypeError )
	
	assert.throws( function() { repr | types }, TypeError )
	
	assert.throws( function() { repr | errors }, TypeError )

$ $BURN --tolerant union_result_13.burn

union_result_14.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { function(){} | nothing }, TypeError )
	
	assert.throws( function() { function(){} | true }, TypeError )
	
	assert.throws( function() { function(){} | false }, TypeError )
	
	assert.throws( function() { function(){} | 0 }, TypeError )
	
	assert.throws( function() { function(){} | 2 }, TypeError )
	
	assert.throws( function() { function(){} | -2 }, TypeError )
	
	assert.throws( function() { function(){} | 0.0 }, TypeError )
	
	assert.throws( function() { function(){} | 2.0 }, TypeError )
	
	assert.throws( function() { function(){} | -0.5 }, TypeError )
	
	assert.throws( function() { function(){} | "" }, TypeError )
	
	assert.throws( function() { function(){} | "apple" }, TypeError )
	
	assert.throws( function() { function(){} | "banana" }, TypeError )
	
	assert.throws( function() { function(){} | repr }, TypeError )
	
	assert.throws( function() { function(){} | function(){} }, TypeError )
	
	assert.throws( function() { function(){} | Something }, TypeError )
	
	assert.throws( function() { function(){} | Type }, TypeError )
	
	assert.throws( function() { function(){} | types }, TypeError )
	
	assert.throws( function() { function(){} | errors }, TypeError )

$ $BURN --tolerant union_result_14.burn

union_result_15.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { Something | nothing }, TypeError )
	
	assert.throws( function() { Something | true }, TypeError )
	
	assert.throws( function() { Something | false }, TypeError )
	
	assert.throws( function() { Something | 0 }, TypeError )
	
	assert.throws( function() { Something | 2 }, TypeError )
	
	assert.throws( function() { Something | -2 }, TypeError )
	
	assert.throws( function() { Something | 0.0 }, TypeError )
	
	assert.throws( function() { Something | 2.0 }, TypeError )
	
	assert.throws( function() { Something | -0.5 }, TypeError )
	
	assert.throws( function() { Something | "" }, TypeError )
	
	assert.throws( function() { Something | "apple" }, TypeError )
	
	assert.throws( function() { Something | "banana" }, TypeError )
	
	assert.throws( function() { Something | repr }, TypeError )
	
	assert.throws( function() { Something | function(){} }, TypeError )
	
	let $v14 = Something | Something
	assert( $v14 is Type )
	
	let $v15 = Something | Type
	assert( $v15 is Type )
	
	assert.throws( function() { Something | types }, TypeError )
	
	assert.throws( function() { Something | errors }, TypeError )

$ $BURN --tolerant union_result_15.burn

union_result_16.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { Type | nothing }, TypeError )
	
	assert.throws( function() { Type | true }, TypeError )
	
	assert.throws( function() { Type | false }, TypeError )
	
	assert.throws( function() { Type | 0 }, TypeError )
	
	assert.throws( function() { Type | 2 }, TypeError )
	
	assert.throws( function() { Type | -2 }, TypeError )
	
	assert.throws( function() { Type | 0.0 }, TypeError )
	
	assert.throws( function() { Type | 2.0 }, TypeError )
	
	assert.throws( function() { Type | -0.5 }, TypeError )
	
	assert.throws( function() { Type | "" }, TypeError )
	
	assert.throws( function() { Type | "apple" }, TypeError )
	
	assert.throws( function() { Type | "banana" }, TypeError )
	
	assert.throws( function() { Type | repr }, TypeError )
	
	assert.throws( function() { Type | function(){} }, TypeError )
	
	let $v14 = Type | Something
	assert( $v14 is Type )
	
	let $v15 = Type | Type
	assert( $v15 is Type )
	
	assert.throws( function() { Type | types }, TypeError )
	
	assert.throws( function() { Type | errors }, TypeError )

$ $BURN --tolerant union_result_16.burn

union_result_17.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { types | nothing }, TypeError )
	
	assert.throws( function() { types | true }, TypeError )
	
	assert.throws( function() { types | false }, TypeError )
	
	assert.throws( function() { types | 0 }, TypeError )
	
	assert.throws( function() { types | 2 }, TypeError )
	
	assert.throws( function() { types | -2 }, TypeError )
	
	assert.throws( function() { types | 0.0 }, TypeError )
	
	assert.throws( function() { types | 2.0 }, TypeError )
	
	assert.throws( function() { types | -0.5 }, TypeError )
	
	assert.throws( function() { types | "" }, TypeError )
	
	assert.throws( function() { types | "apple" }, TypeError )
	
	assert.throws( function() { types | "banana" }, TypeError )
	
	assert.throws( function() { types | repr }, TypeError )
	
	assert.throws( function() { types | function(){} }, TypeError )
	
	assert.throws( function() { types | Something }, TypeError )
	
	assert.throws( function() { types | Type }, TypeError )
	
	assert.throws( function() { types | types }, TypeError )
	
	assert.throws( function() { types | errors }, TypeError )

$ $BURN --tolerant union_result_17.burn

union_result_18.burn:
	import burn.types
	import burn.errors
	
	assert.throws( function() { errors | nothing }, TypeError )
	
	assert.throws( function() { errors | true }, TypeError )
	
	assert.throws( function() { errors | false }, TypeError )
	
	assert.throws( function() { errors | 0 }, TypeError )
	
	assert.throws( function() { errors | 2 }, TypeError )
	
	assert.throws( function() { errors | -2 }, TypeError )
	
	assert.throws( function() { errors | 0.0 }, TypeError )
	
	assert.throws( function() { errors | 2.0 }, TypeError )
	
	assert.throws( function() { errors | -0.5 }, TypeError )
	
	assert.throws( function() { errors | "" }, TypeError )
	
	assert.throws( function() { errors | "apple" }, TypeError )
	
	assert.throws( function() { errors | "banana" }, TypeError )
	
	assert.throws( function() { errors | repr }, TypeError )
	
	assert.throws( function() { errors | function(){} }, TypeError )
	
	assert.throws( function() { errors | Something }, TypeError )
	
	assert.throws( function() { errors | Type }, TypeError )
	
	assert.throws( function() { errors | types }, TypeError )
	
	assert.throws( function() { errors | errors }, TypeError )

$ $BURN --tolerant union_result_18.burn
