// generated by `etc/generate_operator_test.py precedence mul`

mul_or.burn:
	try { print ( 0 * false ) or 0 }
	catch TypeError $e { print "TypeError" }
	print 0 * ( false or 0 )
	try { print 0 * false or 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant mul_or.burn
	* stdout
		TypeError
		0
		TypeError

mul_and.burn:
	try { print ( 0 * true ) and 0 }
	catch TypeError $e { print "TypeError" }
	print 0 * ( true and 0 )
	try { print 0 * true and 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant mul_and.burn
	* stdout
		TypeError
		0
		TypeError

mul_is.burn:
	print ( 0 * 0 ) is Something
	try { print 0 * ( 0 is Something ) }
	catch TypeError $e { print "TypeError" }
	print 0 * 0 is Something

$ $BURN --tolerant mul_is.burn
	* stdout
		true
		TypeError
		true

mul_eq.burn:
	print ( 0 * 0 ) == 0
	try { print 0 * ( 0 == 0 ) }
	catch TypeError $e { print "TypeError" }
	print 0 * 0 == 0

$ $BURN --tolerant mul_eq.burn
	* stdout
		true
		TypeError
		true

mul_neq.burn:
	print ( 0 * 0 ) != 0
	try { print 0 * ( 0 != 0 ) }
	catch TypeError $e { print "TypeError" }
	print 0 * 0 != 0

$ $BURN --tolerant mul_neq.burn
	* stdout
		false
		TypeError
		false

mul_lt.burn:
	print ( 0 * 0 ) < 0
	try { print 0 * ( 0 < 0 ) }
	catch TypeError $e { print "TypeError" }
	print 0 * 0 < 0

$ $BURN --tolerant mul_lt.burn
	* stdout
		false
		TypeError
		false

mul_gt.burn:
	print ( 0 * 0 ) > 0
	try { print 0 * ( 0 > 0 ) }
	catch TypeError $e { print "TypeError" }
	print 0 * 0 > 0

$ $BURN --tolerant mul_gt.burn
	* stdout
		false
		TypeError
		false

mul_lteq.burn:
	print ( 0 * 0 ) <= 0
	try { print 0 * ( 0 <= 0 ) }
	catch TypeError $e { print "TypeError" }
	print 0 * 0 <= 0

$ $BURN --tolerant mul_lteq.burn
	* stdout
		true
		TypeError
		true

mul_gteq.burn:
	print ( 0 * 0 ) >= 0
	try { print 0 * ( 0 >= 0 ) }
	catch TypeError $e { print "TypeError" }
	print 0 * 0 >= 0

$ $BURN --tolerant mul_gteq.burn
	* stdout
		true
		TypeError
		true

mul_add.burn:
	print ( 0 * 0 ) + 2
	print 0 * ( 0 + 2 )
	print 0 * 0 + 2

$ $BURN --tolerant mul_add.burn
	* stdout
		2
		0
		2

mul_sub.burn:
	print ( 0 * 0 ) - 2
	print 0 * ( 0 - 2 )
	print 0 * 0 - 2

$ $BURN --tolerant mul_sub.burn
	* stdout
		-2
		0
		-2

mul_div.burn:
	try { print ( true * 0 ) / 0 }
	catch TypeError $e { print "TypeError" }
	try { print true * ( 0 / 0 ) }
	catch ValueError $e { print "ValueError" }
	try { print true * 0 / 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant mul_div.burn
	* stdout
		TypeError
		ValueError
		TypeError
