// generated by `etc/generate_operator_test.py precedence lteq`

lteq_or.burn:
	try { print ( 0 <= false ) or 0 }
	catch TypeError $e { print "TypeError" }
	print 0 <= ( false or 0 )
	try { print 0 <= false or 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant lteq_or.burn
	* stdout
		TypeError
		true
		TypeError

lteq_and.burn:
	try { print ( 0 <= true ) and 0 }
	catch TypeError $e { print "TypeError" }
	print 0 <= ( true and 0 )
	try { print 0 <= true and 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant lteq_and.burn
	* stdout
		TypeError
		true
		TypeError

lteq_add.burn:
	try { print ( 0 <= 0 ) + 0 }
	catch TypeError $e { print "TypeError" }
	print 0 <= ( 0 + 0 )
	print 0 <= 0 + 0

$ $BURN --tolerant lteq_add.burn
	* stdout
		TypeError
		true
		true

lteq_sub.burn:
	try { print ( 0 <= 0 ) - 0 }
	catch TypeError $e { print "TypeError" }
	print 0 <= ( 0 - 0 )
	print 0 <= 0 - 0

$ $BURN --tolerant lteq_sub.burn
	* stdout
		TypeError
		true
		true

lteq_mul.burn:
	try { print ( 0 <= 0 ) * 0 }
	catch TypeError $e { print "TypeError" }
	print 0 <= ( 0 * 0 )
	print 0 <= 0 * 0

$ $BURN --tolerant lteq_mul.burn
	* stdout
		TypeError
		true
		true

lteq_div.burn:
	try { print ( true <= 0 ) / 0 }
	catch TypeError $e { print "TypeError" }
	try { print true <= ( 0 / 0 ) }
	catch ValueError $e { print "ValueError" }
	try { print true <= 0 / 0 }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant lteq_div.burn
	* stdout
		TypeError
		ValueError
		ValueError
