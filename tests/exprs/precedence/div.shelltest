// generated by `etc/generate_operator_test.py precedence div`

div_or.burn:
	try { print ( 0 / false ) or 0 }
	catch TypeError $e { print "TypeError" }
	try { print 0 / ( false or 0 ) }
	catch ValueError $e { print "ValueError" }
	try { print 0 / false or 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant div_or.burn
	* stdout
		TypeError
		ValueError
		TypeError

div_and.burn:
	try { print ( 0 / true ) and 0 }
	catch TypeError $e { print "TypeError" }
	try { print 0 / ( true and 0 ) }
	catch ValueError $e { print "ValueError" }
	try { print 0 / true and 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant div_and.burn
	* stdout
		TypeError
		ValueError
		TypeError

div_is.burn:
	try { print ( 0 / 0 ) is true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 is true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 is true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_is.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_eq.burn:
	try { print ( 0 / 0 ) == true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 == true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 == true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_eq.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_neq.burn:
	try { print ( 0 / 0 ) != true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 != true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 != true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_neq.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_lt.burn:
	try { print ( 0 / 0 ) < true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 < true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 < true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_lt.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_gt.burn:
	try { print ( 0 / 0 ) > true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 > true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 > true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_gt.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_lteq.burn:
	try { print ( 0 / 0 ) <= true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 <= true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 <= true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_lteq.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_gteq.burn:
	try { print ( 0 / 0 ) >= true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 >= true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 >= true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_gteq.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_add.burn:
	try { print ( 0 / 0 ) + true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 + true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 + true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_add.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_sub.burn:
	try { print ( 0 / 0 ) - true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 - true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 - true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_sub.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_mul.burn:
	try { print ( 0 / 0 ) * true }
	catch ValueError $e { print "ValueError" }
	try { print 0 / ( 0 * true ) }
	catch TypeError $e { print "TypeError" }
	try { print 0 / 0 * true }
	catch ValueError $e { print "ValueError" }

$ $BURN --tolerant div_mul.burn
	* stdout
		ValueError
		TypeError
		ValueError

div_div.burn:
	try { print ( true / 0 ) / 0 }
	catch TypeError $e { print "TypeError" }
	try { print true / ( 0 / 0 ) }
	catch ValueError $e { print "ValueError" }
	try { print true / 0 / 0 }
	catch TypeError $e { print "TypeError" }

$ $BURN --tolerant div_div.burn
	* stdout
		TypeError
		ValueError
		TypeError
